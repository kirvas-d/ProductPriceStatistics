// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Models;

namespace ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Migrations
{
    [DbContext(typeof(ProductPriceStatisticsDbContext))]
    [Migration("20210909131237_InitMigrations")]
    partial class InitMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "en_US.utf8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Models.Price", b =>
                {
                    b.Property<long>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateTimeMeassure")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("PriceId");

                    b.HasIndex(new[] { "ProductId" }, "IX_Prices_ProductId");

                    b.HasIndex(new[] { "StoreId" }, "IX_Prices_StoreId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Models.Store", b =>
                {
                    b.Property<long>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("StoreId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Models.Tag", b =>
                {
                    b.Property<long>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("Name")
                        .HasColumnType("bigint");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.Property<long>("ProductsProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("TagsTagId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductsProductId", "TagsTagId");

                    b.HasIndex("TagsTagId");

                    b.ToTable("ProductTags");
                });

            modelBuilder.Entity("ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Models.Price", b =>
                {
                    b.HasOne("ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Models.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Models.Store", "Store")
                        .WithMany("Prices")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.HasOne("ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Models.Product", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("ProductPriceStatistics.Infrastructure.ProductStatisticsRepository.EFCore.Models.Store", b =>
                {
                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
